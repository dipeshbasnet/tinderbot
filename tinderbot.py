from time import sleep

from selenium.common.exceptions import NoSuchElementException

import env
from selenium import webdriver


class TinderBot:
    def __init__(self):
        self.driver = webdriver.Chrome(executable_path='C:/Users/User/webdriver/chromedriver.exe')

    def login(self):
        self.driver.get('https://tinder.com')
        sleep(10)
        try:
            facebook_btn = self.driver.find_element_by_xpath(
                '//*[@id="content"]/div/div[1]/div/div/main/div/div[2]/div[2]/div/div/span/div[2]/button'
            )
        except NoSuchElementException:
            more_options = self.driver.find_element_by_xpath(
                '//*[@id="content"]/div/div[1]/div/div/main/div/div[2]/div[2]/div/div/span/button'
            )
            '//*[@id="content"]/div/div[1]/div/div/main/div/div[2]/div[2]/div/div/span/div[2]/button'
            more_options.click()
            sleep(3)
            facebook_btn = self.driver.find_element_by_xpath(
                '//*[@id="content"]/div/div[1]/div/div/main/div/div[2]/div[2]/div/div/span/div[2]/button'
            )
        facebook_btn.click()  # click fb login: this opens another window
        sleep(3)
        tinder_base_window = self.driver.window_handles[0]  # save the base window to a variable
        self.driver.switch_to.window(self.driver.window_handles[1])  # switch to fb login window
        fb_email_field = self.driver.find_element_by_xpath('//*[@id="email"]')  # fb email_field
        fb_email_field.send_keys(env.EMAIL)
        fb_email_field.send_keys(env.EMAIL)
        fb_password_field = self.driver.find_element_by_xpath('//*[@id="pass"]')  # fb password field
        fb_password_field.send_keys(env.EMAIL)
        login_btn = self.driver.find_element_by_xpath('//*[@id="loginbutton"]')
        login_btn.click()
        sleep(3)
        login_code_field = None
        try:
            login_code_field = self.driver.find_element_by_xpath('//*[@id="approvals_code"]')
        except NoSuchElementException:
            pass
        if login_code_field:
            print("Seems like you have two factor authentication activated.")
            login_code_field.send_keys(input('Please enter code generated by facebook code generator'))  # ask for code
            continue_button = self.driver.find_element_by_xpath('//*[@id="checkpointSubmitButton"]')
            continue_button.click()
            sleep(3)
            save_browser = self.save_browser_choice()
            if save_browser:
                save_browser = self.driver.find_element_by_xpath(
                    '//*[@id="u_0_2"]'
                )
                save_browser.click()
                sleep(3)
            else:
                dont_save_browser = self.driver.find_element_by_xpath('//*[@id="u_0_3"]')
                dont_save_browser.click()
                sleep(3)
            continue_btn2 = self.driver.find_element_by_xpath(
                '//*[@id="checkpointSubmitButton"]'
            )
            continue_btn2.click()
            sleep(3)
        self.driver.switch_to.window(tinder_base_window)  # switch to the base window
        allow_location_btn = self.driver.find_element_by_xpath(
            '//*[@id = "modal-manager"]/div/div/div/div/div[3]/button[1]'
        )
        allow_location_btn.click()
        sleep(3)
        notifications_choice = self.notifications_choice()
        if notifications_choice:
            notifications_enable = self.driver.find_element_by_xpath(
                '//*[@id="modal-manager"]/div/div/div/div/div[3]/button[1]'
            )
            notifications_enable.click()
            sleep(3)
        else:
            notifications_not_interested = self.driver.find_element_by_xpath(
                '//*[@id="modal-manager"]/div/div/div/div/div[3]/buttobun[2]')
            notifications_not_interested.click()
            sleep(3)

    def notifications_choice(self):
        response_list = ['yes', 'no']
        save_browser_response = input('Do you want to turn on the notifications?')
        if save_browser_response not in response_list:
            print("please answer the question with 'yes' or 'no'")
            return self.save_browser_choice()
        if save_browser_response == 'yes':
            return True
        return False

    def save_browser_choice(self):
        response_list = ['yes', 'no']
        save_browser_response = input('Do you want to save the browser?')
        if save_browser_response not in response_list:
            print("please answer the question with 'yes' or 'no'")
            return self.save_browser_choice()
        if save_browser_response == 'yes':
            return True
        return False

    def like(self):
        like_btn = self.driver.find_element_by_xpath(
            '//*[@id="content"]/div/div[1]/div/div/main/div/div[1]/div/div[2]/div[4]/button'
        )
        like_btn.click()
        sleep(3)

    def dislike(self):
        dislike_btn = self.driver.find_element_by_xpath(
            '//*[@id="content"]/div/div[1]/div/div/main/div/div[1]/div/div[2]/div[2]/button'
        )  # In case you need the dislike button LOL
        dislike_btn.click()

    def auto_swipe_right(self):
        # try to like, if element not found
        # try closing match popup(if matched)
        # try closing "add to home screen" popup
        while True:
            sleep(2)
            try:
                self.like()
            except NoSuchElementException:
                try:
                    self.close_add_home_screen_popup()
                except NoSuchElementException:
                    self.close_match_popup()

    def close_add_home_screen_popup(self):
        home_popup = self.driver.find_element_by_xpath(
            '//*[@id="modal-manager"]/div/div/div[2]/button[2]'
        )
        home_popup.click()

    def close_match_popup(self):
        match_popup = self.driver.find_element_by_xpath(
            '//*[@id="modal-manager-canvas"]/div/div/div[1]/div/div[3]/a'
        )
        match_popup.click()


bot = TinderBot()
bot.login()
bot.auto_swipe_right()
